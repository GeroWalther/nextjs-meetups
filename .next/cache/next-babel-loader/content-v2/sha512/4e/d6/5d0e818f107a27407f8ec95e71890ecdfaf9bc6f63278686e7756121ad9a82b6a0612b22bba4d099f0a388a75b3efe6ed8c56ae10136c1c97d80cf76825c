{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gerowalther/Desktop/12-more-on-ssg/pages/index.js\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  return;\n\n  /*#__PURE__*/\n  _jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n} // export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   //fetch data from an API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// } // runs on server after deployment slower than getStaticProps only use getServerSideProps if we need acces to req object or if data change multiple times a sec\n// export async function getStaticProps() {\n//   //fetch data from an API\n//   const client = await MongoClient.connect(\n//     \"mongodb+srv://theshoguns:KiCWYgZm5lFKOPTI@cluster0.rgz4dah.mongodb.net/meetups?retryWrites=true&w=majority\"\n//   );\n//   const db = client.db();\n//   const meetupsCollection = db.collection(\"meetups\");\n//   const meetups = await meetupsCollection.find().toArray();\n//   client.close();\n//   return {\n//     props: {\n//       meetups: meetups.map((meetup) => ({\n//         title: meetup.title,\n//         address: meetup.address,\n//         image: meetup.image,\n//         id: meetup._id.toString(),\n//       })),\n//     },\n//     revalidate: 1, // will regenerated every second if there is a request, data will never be older that 1sec\n//   }; // always needs to return an object with a props property\n// } //executed during build process not executed by the client. Fills the page source from the beginning - good for SEO\n\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/gerowalther/Desktop/12-more-on-ssg/pages/index.js"],"names":["Fragment","Head","MeetupList","HomePage","props","meetups"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB;;AACA;AAAA,UAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAID,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KA1CSF,Q;;AAuET,eAAeA,QAAf","sourcesContent":["import { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  return;\n  <Fragment>\n    <Head></Head>\n    <MeetupList meetups={props.meetups} />;\n  </Fragment>;\n}\n\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   //fetch data from an API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// } // runs on server after deployment slower than getStaticProps only use getServerSideProps if we need acces to req object or if data change multiple times a sec\n\n// export async function getStaticProps() {\n//   //fetch data from an API\n//   const client = await MongoClient.connect(\n//     \"mongodb+srv://theshoguns:KiCWYgZm5lFKOPTI@cluster0.rgz4dah.mongodb.net/meetups?retryWrites=true&w=majority\"\n//   );\n//   const db = client.db();\n//   const meetupsCollection = db.collection(\"meetups\");\n\n//   const meetups = await meetupsCollection.find().toArray();\n\n//   client.close();\n\n//   return {\n//     props: {\n//       meetups: meetups.map((meetup) => ({\n//         title: meetup.title,\n//         address: meetup.address,\n//         image: meetup.image,\n//         id: meetup._id.toString(),\n//       })),\n//     },\n//     revalidate: 1, // will regenerated every second if there is a request, data will never be older that 1sec\n//   }; // always needs to return an object with a props property\n// } //executed during build process not executed by the client. Fills the page source from the beginning - good for SEO\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\n    \"mongodb+srv://theshoguns:KiCWYgZm5lFKOPTI@cluster0.rgz4dah.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find().toArray();\n  console.log(meetups);\n\n  client.close();\n\n  return {\n    props: {\n      meetups: meetups.map((meetup) => ({\n        title: meetup.data.title,\n        address: meetup.data.address,\n        image: meetup.data.image,\n        id: meetup._id.toString(),\n      })),\n    },\n    revalidate: 1,\n  };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}