{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gerowalther/Desktop/12-more-on-ssg/pages/[meetupId]/index.js\";\nimport { MongoClients } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://image.brigitte.de/10192976/t/aY/v8/w1440/r0/-/palma-de-mallorca-urlaub.jpg\",\n    title: \"First Meetup\",\n    address: \"Some Street 5, Some City\",\n    description: \"This is a first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://theshoguns:KiCWYgZm5lFKOPTI@cluster0.rgz4dah.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport function getStaticProps(cxt) {\n  // fetch data for a single meetup\n  const meetUpId = cxt.params.meetupId;\n  console.log(meetUpId);\n  return {\n    props: {\n      meetup: {\n        id: meetUpId,\n        image: \"https://image.brigitte.de/10192976/t/aY/v8/w1440/r0/-/palma-de-mallorca-urlaub.jpg\",\n        id: \"m1\",\n        title: \"First Meetup\",\n        address: \"Some Street 5, Some City\",\n        description: \"This is a first meetup\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/gerowalther/Desktop/12-more-on-ssg/pages/[meetupId]/index.js"],"names":["MongoClients","MeetupDetail","MeetupDetails","getStaticPaths","client","MongoClient","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","cxt","meetUpId","console","log","props","id","image","title","address","description"],"mappings":";;AAAA,SAASA,YAAT,QAA6B,SAA7B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAyB;AACvB,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,oFADR;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,OAAO,EAAC,0BAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMC,WAAW,CAACC,OAAZ,CACnB,4GADmB,CAArB;AAGA,QAAMC,EAAE,GAAGH,MAAM,CAACG,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAT,EAAAA,MAAM,CAACU,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;AAClC;AAEA,QAAMC,QAAQ,GAAGD,GAAG,CAACJ,MAAJ,CAAWC,QAA5B;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA,SAAO;AACLG,IAAAA,KAAK,EAAE;AACLT,MAAAA,MAAM,EAAE;AACNU,QAAAA,EAAE,EAAEJ,QADE;AAENK,QAAAA,KAAK,EACH,oFAHI;AAIND,QAAAA,EAAE,EAAE,IAJE;AAKNE,QAAAA,KAAK,EAAE,cALD;AAMNC,QAAAA,OAAO,EAAE,0BANH;AAONC,QAAAA,WAAW,EAAE;AAPP;AADH;AADF,GAAP;AAaD;AAED,eAAe9B,aAAf","sourcesContent":["import { MongoClients } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return (\n    <MeetupDetail\n      image=\"https://image.brigitte.de/10192976/t/aY/v8/w1440/r0/-/palma-de-mallorca-urlaub.jpg\"\n      title=\"First Meetup\"\n      address=\"Some Street 5, Some City\"\n      description=\"This is a first meetup\"\n    />\n  );\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://theshoguns:KiCWYgZm5lFKOPTI@cluster0.rgz4dah.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n}\n\nexport function getStaticProps(cxt) {\n  // fetch data for a single meetup\n\n  const meetUpId = cxt.params.meetupId;\n\n  console.log(meetUpId);\n\n  return {\n    props: {\n      meetup: {\n        id: meetUpId,\n        image:\n          \"https://image.brigitte.de/10192976/t/aY/v8/w1440/r0/-/palma-de-mallorca-urlaub.jpg\",\n        id: \"m1\",\n        title: \"First Meetup\",\n        address: \"Some Street 5, Some City\",\n        description: \"This is a first meetup\",\n      },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}